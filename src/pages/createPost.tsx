import React, { useState } from "react";
import Head from "next/head";
import axios from "axios";
import Link from "next/link";

interface User {
  email: String;
}

interface Props {
  user: User;
  isLogged: boolean;
}

export async function getServerSideProps({ req, res }: any) {
  const cookies = req.headers.cookie;
  // const token = jwt.decode(cookies.split("=")[1]);
  const token = cookies?.split("=")[1];

  // const isValid = jwt.verify(cookies.split("=")[1])
  const resp: any = await axios.post(
    "http://localhost:5000/verify-token",
    { token: token },
    {
      withCredentials: true,
      method: "POST",
    }
  );

  console.log(resp.data);

  if (!resp.data.isLogged) {
    return {
      redirect: {
        permanent: false,
        destination: "/login",
      },
      props: {},
    };
  }

  return {
    props: {
      user: { email: resp.data.email },
      isLogged: resp.data.isLogged,
    },
  };
}

const CreatePost = ({ user, isLogged }: any) => {
  const [error, setError] = useState(false);

  const handleSubmit = async (event: React.SyntheticEvent) => {
    event.preventDefault();

    const titulo = (event?.target as any).titulo.value;
    const mensagem = (event?.target as any).mensagem.value;
    const category = (event?.target as any).category.value;

    console.log(category);

    if (titulo === "" || mensagem === "") {
      setError(true);
      return;
    }

    if (!isLogged) {
      console.log("nao ta logado");
      return;
    }

    const data = {
      title: titulo,
      mensagem,
      email: user.email,
      category_id: parseInt(category),
    };

    const resp: any = await axios.post("http://localhost:5000/create", data, {
      withCredentials: true,
      method: "POST",
    });
  };

  return (
    <div className="center">
      <Head>
        <title>Forum</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h2 className="title mb-4">CREATE POST</h2>

      <form onSubmit={handleSubmit}>
        <div className="flex flex-col items-center justify-center">
          <label className="mb-2 text-lg">Choose a category:</label>
          <select className="dark:text-textLight" name="category">
            <option value="1">General Discussion</option>
            <option value="2">support</option>
            <option value="3">Off-Topic</option>
            <option value="4">community</option>
          </select>
        </div>

        <div className="py-4 text-center">
          {error && <h2 className="text-error">Please enter all fields</h2>}
          {!isLogged && (
            <h2 className="text-error">
              You must{" "}
              <span className="underline underline-offset-2">
                <Link href="/login">login</Link>
              </span>{" "}
              to create a post
            </h2>
          )}
        </div>
        <div>
          <div>
            <input
              className="inputStyle mb-2"
              type="text"
              name="titulo"
              placeholder="titulo"
            />
          </div>
          <div>
            <input
              className="inputStyle mb-6"
              type="text"
              name="mensagem"
              placeholder="mensagem"
            />
          </div>

          <button className="btn">Submit</button>
        </div>
      </form>
    </div>
  );
};

export default CreatePost;
