import React, { useState } from "react";
import { parseCookies } from "nookies";
import validateToken from "../utils/validateToken";
import Head from "next/head";

import { withIronSessionSsr } from "iron-session/next";

interface User {
  email: String;
}

interface Props {
  user: User;
  isLogged: boolean;
}

export const getServerSideProps = withIronSessionSsr(
  async function getServerSideProps({ req }: any) {
    const user: User = req.session.user;

    if (user?.email === undefined) {
      return {
        props: {
          user: {},
          isLogged: false,
        },
      };
    }

    return {
      props: {
        //@ts-ignore
        user: req.session.user,
        isLogged: true,
      },
    };
  },
  {
    cookieName: "tk",
    // @ts-ignore
    password: process.env.SECRET_WORD,
    cookieOptions: {
      secure: false,
    },
  }
);

const CreatePost = ({ user, isLogged }: Props) => {
  const [error, setError] = useState(false);

  const handleSubmit = async (event: React.SyntheticEvent) => {
    event.preventDefault();

    const titulo = (event?.target as any).titulo.value;
    const mensagem = (event?.target as any).mensagem.value;
    const category = (event?.target as any).category.value;

    console.log(category);

    if (titulo === "" || mensagem === "") {
      setError(true);
      return;
    }

    if (!user || !isLogged) {
      console.log("nao ta logado");
      return;
    }

    const email = user.email;

    const data = {
      title: titulo,
      mensagem,
      email,
      category: category.toLowerCase(),
    };

    const resp = await fetch("/api/createPost", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    });

    const data2 = await resp.json();
    console.log(data2);
  };

  return (
    <div className="text-black">
      <Head>
        <title>Forum</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h2>createPost</h2>

      <form onSubmit={handleSubmit}>
        <div>
          <label>Choose a category:</label>
          <select name="category">
            <option value="general-discussion">General Discussion</option>
            <option value="lore">Lore</option>
            <option value="off-topic">Off-Topic</option>
            <option value="news">News</option>
          </select>
        </div>

        {error && <h2 className="text-error">Please enter all fields</h2>}
        {!isLogged && (
          <h2 className="text-error">You must login to create a post</h2>
        )}
        <div>
          <input type="text" name="titulo" placeholder="titulo" />
        </div>
        <div>
          <input type="text" name="mensagem" placeholder="mensagem" />
        </div>

        <button>Submit</button>
      </form>
    </div>
  );
};

export default CreatePost;
